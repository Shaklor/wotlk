import{A as e,aq as t,ap as a,eR as s,T as l,eS as i,eT as n,eU as o,S as r,e7 as c,L as d,D as p,b as m,eV as h,E as u,co as g,cr as f,ct as I,a2 as S,ab as v,F as T,aG as w,br as b,w as y,B as A,aH as C,bt as O,$ as k,V as G}from"./detailed_results-dd5e5c02.chunk.js";import{m as P,a as E,l as R,b as B,c as M,d as x,e as W,f as D,Q as F,I as L,U as N,J as H,V as q,T as z,x as Y}from"./preset_utils-cea776cb.chunk.js";P({fieldName:"innervateTarget",id:e.fromSpellId(29166),extraCssClasses:["within-raid-sim-hide"],getValue:e=>e.getSpecOptions().innervateTarget?.type==t.Player,setValue:(e,s,l)=>{const i=s.getSpecOptions();i.innervateTarget=a.create({type:l?t.Player:t.Unknown,index:0}),s.setSpecOptions(e,i)}});const U=E({fieldName:"latencyMs",label:"Latency",labelTooltip:"Player latency, in milliseconds. Adds a delay to actions that cannot be spell queued."}),j=R({fieldName:"assumeBleedActive",label:"Assume Bleed Always Active",labelTooltip:"Assume bleed always exists for 'Rend and Tear' calculations. Otherwise will only calculate based on own rip/rake/lacerate.",extraCssClasses:["within-raid-sim-hide"]});function V(e){let t=e.getRotation();return t.manualParams&&t.rotationType==s.SingleTarget}function J(e){let t=e.getRotation();return t.manualParams&&t.rotationType==s.Aoe}const _={inputs:[B({fieldName:"rotationType",label:"Type",values:[{name:"Single Target",value:s.SingleTarget},{name:"AOE",value:s.Aoe}]}),M({fieldName:"prePopOoc",label:"Pre-pop Clearcasting",labelTooltip:"Start fight with clearcasting",showWhen:e=>e.getTalents().omenOfClarity,changeEmitter:e=>l.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),M({fieldName:"prePopBerserk",label:"Pre-pop Berserk",labelTooltip:"Pre pop berserk 1 sec before fight",showWhen:e=>e.getTalents().berserk,changeEmitter:e=>l.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),M({fieldName:"manualParams",label:"Manual Advanced Parameters",labelTooltip:"Manually specify advanced parameters, otherwise will use preset defaults"}),x({fieldName:"maxFfDelay",label:"Max FF Delay",labelTooltip:"Max allowed delay to wait for ff to come off CD in seconds",float:!0,positive:!0,showWhen:e=>e.getRotation().manualParams}),x({fieldName:"minRoarOffset",label:"Roar Offset",labelTooltip:"Targeted offset in Rip/Roar timings",showWhen:V}),x({fieldName:"ripLeeway",label:"Rip Leeway",labelTooltip:"Rip leeway when determining roar clips",showWhen:V}),M({fieldName:"useRake",label:"Use Rake",labelTooltip:"Use rake during rotation",showWhen:V}),M({fieldName:"useBite",label:"Bite during rotation",labelTooltip:"Use bite during rotation rather than just at end",showWhen:V}),x({fieldName:"biteTime",label:"Bite Time",labelTooltip:"Min seconds on Rip/Roar to bite",showWhen:e=>V(e)&&1==e.getRotation().useBite&&e.getRotation().biteModeType==i.Emperical}),M({fieldName:"flowerWeave",label:"Flower Weave",labelTooltip:"Fish for clearcasting during rotation with gotw",showWhen:J}),x({extraCssClasses:["used-in-apl"],fieldName:"raidTargets",label:"GotW Raid Targets",labelTooltip:"Raid size to assume for clearcast proc chance (can include pets as well, so 25 man raid potentically can be ~30)",showWhen:e=>e.aplRotation.enabled||J(e)&&1==e.getRotation().flowerWeave}),x({fieldName:"hotUptime",label:"Revitalize Hot Uptime",labelTooltip:"Hot uptime percentage to assume when theorizing energy gains",percent:!0,showWhen:e=>1==e.getRotation().useBite&&e.getRotation().biteModeType==i.Analytical})]},K={items:[{id:40473,enchant:3817,gems:[41398,39996]},{id:44664,gems:[39996]},{id:40494,enchant:3808,gems:[39996]},{id:40403,enchant:3605},{id:40539,enchant:3832,gems:[39996]},{id:39765,enchant:3845,gems:[39996,0]},{id:40541,enchant:3604,gems:[0]},{id:40205,gems:[39996]},{id:44011,enchant:3823,gems:[39996,49110]},{id:40243,enchant:3606,gems:[40014]},{id:40474},{id:40717},{id:42987},{id:40256},{id:40388,enchant:3789},{},{id:39757}]},Q={items:[{id:46161,enchant:3817,gems:[41398,40002]},{id:45517,gems:[40002]},{id:45245,enchant:3808,gems:[40002,40002]},{id:46032,enchant:3605,gems:[40002,40058]},{id:45473,enchant:3832,gems:[40002,40002,40002]},{id:45869,enchant:3845,gems:[40037]},{id:46158,enchant:3604,gems:[40002]},{id:46095,gems:[40002,40002,40002]},{id:45536,enchant:3823,gems:[39996,39996,39996]},{id:45564,enchant:3606,gems:[39996,39996]},{id:46048,gems:[45862]},{id:45608,gems:[39996]},{id:45931},{id:46038},{id:45613,enchant:3789,gems:[40037,42702]},{},{id:40713}]},$={items:[{id:48204,enchant:3817,gems:[41398,40146]},{id:47060,gems:[40117]},{id:48207,enchant:3808,gems:[40146]},{id:47545,enchant:3605,gems:[40117]},{id:48206,enchant:3832,gems:[40117,40146]},{id:45611,enchant:3845,gems:[40146,0]},{id:47945,enchant:3604,gems:[40112,40117,0]},{id:47112,gems:[40146,40117,40117]},{id:48205,enchant:3823,gems:[40117,49110]},{id:47077,enchant:3606,gems:[40146,40117]},{id:47075,gems:[40117]},{id:45608,gems:[40117]},{id:45931},{id:47131},{id:47239,enchant:3789,gems:[40146,40117]},{},{id:47668}]},X={items:[{id:51296,enchant:3817,gems:[41398,40117]},{id:50633,gems:[40117]},{id:51299,enchant:3808,gems:[40117]},{id:47545,enchant:3605,gems:[40117]},{id:51298,enchant:3832,gems:[40117,40125]},{id:50670,enchant:3845,gems:[40125,0]},{id:50675,enchant:3604,gems:[40162,40117,0]},{id:50707,gems:[40117,40117,40117]},{id:51297,enchant:3823,gems:[40117,40162]},{id:50607,enchant:3606,gems:[40143,40143]},{id:50604,gems:[40143]},{id:50402,gems:[40143]},{id:50363},{id:50343},{id:50735,enchant:3789,gems:[40117,49110,40143]},{},{id:50456}]},Z={type:"TypeAPL",prepullActions:[{action:{activateAura:{auraId:{spellId:16870}}},doAtValue:{const:{val:"-1s"}}}],priorityList:[{action:{autocastOtherCooldowns:{}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentEnergy:{}},rhs:{const:{val:"30"}}}},castSpell:{spellId:{spellId:50213}}}},{action:{condition:{and:{vals:[{not:{val:{auraIsActive:{auraId:{spellId:16870}}}}},{cmp:{op:"OpEq",lhs:{currentComboPoints:{}},rhs:{const:{val:"5"}}}},{not:{val:{dotIsActive:{spellId:{spellId:49800}}}}},{cmp:{op:"OpGe",lhs:{remainingTime:{}},rhs:{const:{val:"10s"}}}}]}},castSpell:{spellId:{spellId:49800}}}},{action:{condition:{and:{vals:[{spellCanCast:{spellId:{spellId:16857}}},{not:{val:{auraIsActive:{auraId:{spellId:16870}}}}},{or:{vals:[{and:{vals:[{auraIsActive:{auraId:{spellId:50334}}},{cmp:{op:"OpLt",lhs:{currentEnergy:{}},rhs:{const:{val:"15"}}}}]}},{and:{vals:[{not:{val:{auraIsActive:{auraId:{spellId:50334}}}}},{cmp:{op:"OpLt",lhs:{currentEnergy:{}},rhs:{const:{val:"87"}}}}]}}]}},{cmp:{op:"OpLt",lhs:{currentEnergy:{}},rhs:{}}}]}},castSpell:{spellId:{spellId:16857}}}},{action:{condition:{and:{vals:[{spellCanCast:{spellId:{spellId:50334}}},{cmp:{op:"OpGt",lhs:{spellTimeToReady:{spellId:{spellId:50213}}},rhs:{const:{val:"15s"}}}},{dotIsActive:{spellId:{spellId:49800}}},{not:{val:{auraIsActive:{auraId:{spellId:16870}}}}}]}},castSpell:{spellId:{spellId:50334}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpGe",lhs:{currentComboPoints:{}},rhs:{const:{val:"1"}}}},{or:{vals:[{not:{val:{auraIsActive:{auraId:{spellId:52610}}}}},{and:{vals:[{dotIsActive:{spellId:{spellId:49800}}},{cmp:{op:"OpGt",lhs:{math:{op:"OpSub",lhs:{remainingTime:{}},rhs:{dotRemainingTime:{spellId:{spellId:49800}}}}},rhs:{const:{val:"10s"}}}},{cmp:{op:"OpLt",lhs:{auraRemainingTime:{auraId:{spellId:52610}}},rhs:{math:{op:"OpAdd",lhs:{dotRemainingTime:{spellId:{spellId:49800}}},rhs:{const:{val:"4s"}}}}}},{cmp:{op:"OpLt",lhs:{auraRemainingTime:{auraId:{spellId:52610}}},rhs:{remainingTime:{}}}},{cmp:{op:"OpGe",lhs:{catNewSavageRoarDuration:{}},rhs:{math:{op:"OpAdd",lhs:{dotRemainingTime:{spellId:{spellId:49800}}},rhs:{const:{val:"25s"}}}}}}]}}]}}]}},castSpell:{spellId:{spellId:52610}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpEq",lhs:{currentComboPoints:{}},rhs:{const:{val:"5"}}}},{not:{val:{auraIsActive:{auraId:{spellId:16870}}}}},{or:{vals:[{and:{vals:[{auraIsActive:{auraId:{spellId:50334}}},{cmp:{op:"OpLe",lhs:{currentEnergy:{}},rhs:{const:{val:"25"}}}}]}},{and:{vals:[{not:{val:{auraIsActive:{auraId:{spellId:50334}}}}},{cmp:{op:"OpLt",lhs:{currentEnergy:{}},rhs:{const:{val:"67"}}}}]}}]}},{or:{vals:[{and:{vals:[{dotIsActive:{spellId:{spellId:49800}}},{auraIsActive:{auraId:{spellId:52610}}},{cmp:{op:"OpGe",lhs:{dotRemainingTime:{spellId:{spellId:49800}}},rhs:{const:{val:"4s"}}}},{cmp:{op:"OpGe",lhs:{auraRemainingTime:{auraId:{spellId:52610}}},rhs:{const:{val:"4s"}}}}]}},{and:{vals:[{dotIsActive:{spellId:{spellId:49800}}},{cmp:{op:"OpLt",lhs:{math:{op:"OpSub",lhs:{remainingTime:{}},rhs:{dotRemainingTime:{spellId:{spellId:49800}}}}},rhs:{const:{val:"10s"}}}}]}},{cmp:{op:"OpLt",lhs:{remainingTime:{}},rhs:{const:{val:"10s"}}}}]}}]}},castSpell:{spellId:{spellId:48577}}}},{action:{condition:{and:{vals:[{auraShouldRefresh:{auraId:{spellId:48566},maxOverlap:{const:{val:"1s"}}}},{not:{val:{auraIsActive:{auraId:{spellId:16870}}}}}]}},castSpell:{spellId:{spellId:48566}}}},{action:{condition:{and:{vals:[{not:{val:{auraIsActive:{auraId:{spellId:16870}}}}},{not:{val:{dotIsActive:{spellId:{spellId:48574}}}}},{cmp:{op:"OpGt",lhs:{remainingTime:{}},rhs:{const:{val:"9s"}}}}]}},castSpell:{spellId:{spellId:48574}}}},{action:{condition:{and:{vals:[{or:{vals:[{auraIsActive:{auraId:{spellId:16870}}},{cmp:{op:"OpGe",lhs:{catExcessEnergy:{}},rhs:{const:{val:"120"}}}}]}},{cmp:{op:"OpEq",lhs:{const:{val:"1"}},rhs:{const:{val:"0"}}}}]}},castSpell:{spellId:{spellId:48566}}}},{action:{condition:{and:{vals:[{or:{vals:[{auraIsActive:{auraId:{spellId:16870}}},{cmp:{op:"OpGe",lhs:{catExcessEnergy:{}},rhs:{const:{val:"42s"}}}}]}}]}},castSpell:{spellId:{spellId:48572}}}}]},ee=W("Preraid Preset",{items:[{id:42550,enchant:3817,gems:[41398,39996]},{id:40678},{id:37139,enchant:3808,gems:[39996]},{id:37840,enchant:3605},{id:37219,enchant:3832},{id:44203,enchant:3845,gems:[0]},{id:37409,enchant:3604,gems:[0]},{id:40694,gems:[49110,39996]},{id:37644,enchant:3823},{id:44297,enchant:3606},{id:37642},{id:37624},{id:40684},{id:37166},{id:37883,enchant:3827},{},{id:40713}]}),te=W("P1 Preset",K),ae=W("P2 Preset",Q),se=W("P3 Preset",$),le=W("P4 Preset",X),ie=D("APL Default",Z),ne=n.create({rotationType:s.SingleTarget,bearWeaveType:o.None,minCombosForRip:5,minCombosForBite:5,useRake:!0,useBite:!0,mangleSpam:!1,biteModeType:i.Emperical,biteTime:4,berserkBiteThresh:25,berserkFfThresh:15,powerbear:!1,minRoarOffset:12,ripLeeway:3,maintainFaerieFire:!0,hotUptime:0,snekWeave:!1,flowerWeave:!1,raidTargets:30,maxFfDelay:.1,prePopOoc:!0}),oe=F("Legacy Default",r.SpecFeralDruid,ne),re={name:"Standard",data:c.create({talentsString:"-543202132322010053120030310511-203503012",glyphs:d.create({major1:p.GlyphOfOmenOfClarity,major2:p.GlyphOfSavageRoar,major3:p.GlyphOfShred,minor1:m.GlyphOfDash,minor2:m.GlyphOfTheWild,minor3:m.GlyphOfUnburdenedRebirth})})},ce=h.create({latencyMs:100,assumeBleedActive:!0}),de=u.create({flask:g.FlaskOfEndlessRage,food:f.FoodDragonfinFilet,defaultPotion:I.PotionOfSpeed});class pe extends L{constructor(e,t){super(e,t,{cssClass:"feral-druid-sim-ui",cssScheme:"druid",knownIssues:[],warnings:[],epStats:[S.StatStrength,S.StatAgility,S.StatAttackPower,S.StatMeleeHit,S.StatMeleeCrit,S.StatMeleeHaste,S.StatArmorPenetration,S.StatExpertise],epPseudoStats:[v.PseudoStatMainHandDps],epReferenceStat:S.StatAttackPower,displayStats:[S.StatHealth,S.StatStrength,S.StatAgility,S.StatAttackPower,S.StatMeleeHit,S.StatMeleeCrit,S.StatMeleeHaste,S.StatArmorPenetration,S.StatExpertise,S.StatMana],defaults:{gear:le.gear,epWeights:T.fromMap({[S.StatStrength]:2.4,[S.StatAgility]:2.39,[S.StatAttackPower]:1,[S.StatMeleeHit]:2.51,[S.StatMeleeCrit]:2.23,[S.StatMeleeHaste]:1.83,[S.StatArmorPenetration]:2.08,[S.StatExpertise]:2.44},{[v.PseudoStatMainHandDps]:16.5}),consumes:de,rotation:ne,talents:re.data,specOptions:ce,raidBuffs:w.create({arcaneBrilliance:!0,giftOfTheWild:b.TristateEffectImproved,bloodlust:!0,manaSpringTotem:b.TristateEffectRegular,strengthOfEarthTotem:b.TristateEffectImproved,battleShout:b.TristateEffectImproved,unleashedRage:!0,icyTalons:!0,swiftRetribution:!0,sanctifiedRetribution:!0}),partyBuffs:y.create({heroicPresence:!0}),individualBuffs:A.create({blessingOfKings:!0,blessingOfMight:b.TristateEffectImproved}),debuffs:C.create({judgementOfWisdom:!0,bloodFrenzy:!0,giftOfArthas:!0,exposeArmor:!0,faerieFire:b.TristateEffectImproved,sunderArmor:!0,curseOfWeakness:b.TristateEffectRegular,heartOfTheCrusader:!0})},playerIconInputs:[],rotationInputs:_,includeBuffDebuffInputs:[N,H,q],excludeBuffDebuffInputs:[],otherInputs:{inputs:[U,j,z,Y]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[re],rotations:[oe,ie],gear:[ee,te,ae,se,le]},autoRotation:e=>oe.rotation.rotation}),this.addOptimizeGemsAction()}addOptimizeGemsAction(){this.addAction("Suggest Gems","optimize-gems-action",(async()=>{this.optimizeGems()}))}async optimizeGems(){let e=this.player.getGear().withoutGems();e=e.withMetaGem(this.sim.db.lookupGem(41398));const t=this.player.getEpWeights();let a=O.GemColorBlue,s=this.findBlueTearSlot(e,t);null==s&&(a=O.GemColorYellow,s=this.findYellowTearSlot(e,t)),e=this.socketTear(e,s,a),await this.updateGear(e);const l=this.findSocketsByColor(e,t,O.GemColorRed,s),i=new Array,n=this.calcArpTarget(e),o=(new T).withStat(S.StatArmorPenetration,n+11);i.push([40117,o]);const r=(new T).withStat(S.StatExpertise,217.135);i.push([40118,r]);const c=this.calcCritCap(e);i.push([40112,c]),i.push([40111,new T]);let d=0;this.player.hasProfession(k.Jewelcrafting)&&(e=this.optimizeJcGems(e,l,n,o,c),d=3),e=await this.fillGemsToCaps(e,l,i,0,d);const p=this.findSocketsByColor(e,t,O.GemColorYellow,s),m=new Array,h=(new T).withStat(S.StatMeleeHit,266.32);m.push([40125,h]),m.push([40162,h.add(r)]),this.detectArpStackConfiguration(n)&&(this.sortYellowSockets(e,p,t,s),m.reverse(),m.push([40117,o])),m.push([40148,h.add(c)]),m.push([40143,h]),m.push([40147,c]),m.push([40142,c]),m.push([40146,new T]),await this.fillGemsToCaps(e,p,m,0,0)}calcArpTarget(e){let t=1399;e.hasTrinket(45931)?t-=751:e.hasTrinket(40256)&&(t-=612);const a=e.getEquippedItem(G.ItemSlotMainHand);return null!=a&&null!=a.enchant&&3225==a.enchant.effectId&&(t-=120),t}calcCritCap(e){let t=0;return e.hasRelic(47668)&&(t+=200),e.hasRelic(50456)&&(t+=220),(e.hasTrinket(47131)||e.hasTrinket(47464))&&(t+=510),(e.hasTrinket(47115)||e.hasTrinket(47303))&&(t+=450),(e.hasTrinket(44253)||e.hasTrinket(42987))&&(t+=300),(new T).withStat(S.StatMeleeCrit,45.91*(77.8-1.1*t*1.06*1.02/83.33))}async updateGear(e){return this.player.setGear(l.nextEventID(),e),await this.sim.updateCharacterStats(l.nextEventID()),T.fromProto(this.player.getCurrentStats().finalStats)}findBlueTearSlot(e,t){let a=null,s=1e-8;for(var l of e.getItemSlots()){const i=e.getEquippedItem(l);if(!i)continue;if(1!=i.numSocketsOfColor(O.GemColorBlue))continue;const n=new T(i.item.socketBonus).computeEP(t);n>s&&(a=l,s=n)}return a}findYellowTearSlot(e,t){let a=null,s=1e-8;for(var l of e.getItemSlots()){const i=e.getEquippedItem(l);if(!i)continue;if(0!=i.numSocketsOfColor(O.GemColorBlue))continue;const n=i.numSocketsOfColor(O.GemColorYellow);if(0==n)continue;const o=new T(i.item.socketBonus).computeEP(t)/n;o>s&&(a=l,s=o)}return a}socketTear(e,t,a){if(null!=t){const s=e.getEquippedItem(t);for(const[l,i]of s.allSocketColors().entries())if(i==a)return e.withEquippedItem(t,s.withGem(this.sim.db.lookupGem(49110),l),!0)}return e}findSocketsByColor(e,t,a,s){const l=new Array,i=this.player.isBlacksmithing();for(var n of e.getItemSlots()){const o=e.getEquippedItem(n);if(!o)continue;const r=o.numSocketsOfColor(O.GemColorBlue)>0&&n!=s;for(const[e,s]of o.curSocketColors(i).entries()){if(o.hasSocketedGem(e))continue;let i=!1;s!=O.GemColorYellow||r||(i=new T(o.item.socketBonus).computeEP(t)>1e-8),(a==O.GemColorYellow&&i||a==O.GemColorRed&&!i)&&l.push([n,e])}}return l}sortYellowSockets(e,t,a,s){t.sort(((t,l)=>{const i=t[0],n=l[0];if(i==n)return 0;if(i==s)return-1;if(n==s)return 1;const o=e.getEquippedItem(i),r=new T(o.item.socketBonus).computeEP(a),c=e.getEquippedItem(n);return new T(c.item.socketBonus).computeEP(a)/c.numSocketsOfColor(O.GemColorYellow)-r/o.numSocketsOfColor(O.GemColorYellow)}))}async fillGemsToCaps(e,t,a,s,l){let i=e;const n=this.sim.db.lookupGem(a[s][0]);if(0==s)for(const[u,g]of t.slice(l))i=i.withGem(u,g,n);let o=await this.updateGear(i);const r=a[s][1];if(o.belowCaps(r)||s==a.length-1)return i;const c=this.sim.db.lookupGem(a[s+1][0]),d=a[s+1][1];let p=r.subtract(d);r.computeEP(p)<=0&&(p=r);for(var m=t.length-1;m>=l&&!o.belowCaps(p);m--){const[e,a]=t[m];i=i.withGem(e,a,c),o=await this.updateGear(i)}let h=m+1;return o.belowCaps(r)||(h=l),await this.fillGemsToCaps(i,t,a,s+1,h)}calcDistanceToArpTarget(e,t,a,s,l){const i=t+34*e+20*Math.max(0,Math.min(a-3,Math.floor((s-t-34*e)/20)));return Math.abs(i-l)}optimizeJcGems(e,t,a,s,l){const i=T.fromProto(this.player.getCurrentStats().finalStats),n=i.getStat(S.StatArmorPenetration),o=t.length,r=s.getStat(S.StatArmorPenetration),c=[0,1,2,3].reduce(((e,t)=>this.calcDistanceToArpTarget(e,n,o,r,a)<this.calcDistanceToArpTarget(t,n,o,r,a)?e:t)),d=i.belowCaps(l);let p=e;for(let m=0;m<3;m++){let e=42142;m<c?e=42153:d&&(e=42143),p=p.withGem(t[m][0],t[m][1],this.sim.db.lookupGem(e))}return p}detectArpStackConfiguration(e){const t=T.fromProto(this.player.getCurrentStats().finalStats).getStat(S.StatArmorPenetration);return e>1e3&&t>648&&t+20<e+11}}export{ne as D,pe as F,te as P,re as S,ce as a,de as b,ae as c,se as d};
//# sourceMappingURL=sim-fe7e73c2.chunk.js.map
